generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model climbs {
  uuid            String  @id
  layout_id       Int
  setter_id       Int
  setter_username String
  name            String
  description     String? @default("")
  hsm             Int?
  edge_left       Int
  edge_right      Int
  edge_bottom     Int
  edge_top        Int
  angle           Int?
  frames_count    Int     @default(1)
  frames_pace     Int     @default(0)
  frames          String?
  is_draft        Boolean @default(false)
  is_listed       Boolean
  created_at      String
  layouts         layouts @relation(fields: [layout_id], references: [id], onDelete: Cascade)
}

model layouts {
  id                Int      @id
  product_id        Int
  name              String
  instagram_caption String?
  is_mirrored       Boolean?
  is_listed         Boolean?
  password          String?
  created_at        String?
  climbs            climbs[]
  products          products @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model products {
  id                 Int       @id
  name               String
  is_listed          Boolean
  password           String?
  min_count_in_frame Int?
  max_count_in_frame Int?
  layouts            layouts[]
}

model Session {
  id    String @id
  name  String
  round Int
  time  Int
  climb Json[]
}

model climb_stats {
  climb_uuid           String
  angle                Int
  display_difficulty   Float
  benchmark_difficulty Float?
  ascensionist_count   Int
  difficulty_average   Float
  quality_average      Float
  fa_username          String
  fa_at                String

  @@id([climb_uuid, angle])
}

model difficulty_grades {
  difficulty   Int     @id
  boulder_name String
  route_name   String
  is_listed    Boolean
}
